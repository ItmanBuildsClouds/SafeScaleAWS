name: "CI Build Docker Image"

on:
    push:
        branches:
            - main
        paths:
          - '02_app/**'

    pull_request:
        branches:
            - main
        paths:
          - '02_app/**'


permissions:
    id-token: write
    contents: read

jobs:
    docker-build:
        runs-on: ubuntu-latest
        outputs:
          image_url: ${{ steps.meta.outputs.tags }}

        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
                aws-region: eu-central-1

            - name: "Login to Amazon ECR"
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2


            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_NAME }}
                tags: |
                  type=sha,prefix=,format=long


            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
                  
            - name: Build Docker Image
              id: build-image
              uses: docker/build-push-action@v5
              with:
                context: ./02_app
                platforms: linux/amd64
                push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

            - name: Build summary
              if: success()
              run: |
                echo "Build completed successsfully"
                if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
                  echo "Image pushed to Docker Hub"
                  echo "Available tags:"
                  echo "${{ steps.meta.outputs.tags }}"
                else
                  echo "Image built locally - no push"
                fi
    # deploy-infrastructure:
    #   name: "Deploy Infrastructure with Terraform"
    #   runs-on: ubuntu-latest
    #   needs: [docker-build]

    #   steps:
    #       - name: Checkout code
    #         uses: actions/checkout@v4

    #       - name: Configure AWS Credentials
    #         uses: aws-actions/configure-aws-credentials@v4
    #         with:
    #             role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
    #             aws-region: eu-central-1

    #       - name: Setup Terraform
    #         uses: hashicorp/setup-terraform@v3

    #       - name: Terraform Plan
    #         if: github.event_name == 'pull_request'
    #         run: |
    #           cd 03_terraform
    #           terraform init
    #           terraform plan -var="image_url=${{ needs.docker-build.outputs.image_url }}"

    #       - name: Terraform Apply
    #         if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #         run: |
    #           cd 03_terraform
    #           terraform init
    #           terraform apply -auto-approve -var="image_url=${{ needs.docker-build.outputs.image_url }}"